import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { Theme } from "@radix-ui/themes";
import "@radix-ui/themes/styles.css";
import '@radix-ui/themes/styles.css';
import '@radix-ui/themes/layout.css';
import '@radix-ui/themes/tokens.css';
import '@radix-ui/themes/components.css';
import '@radix-ui/themes/utilities.css';
import Provider from "./Provider";
import { getLocale, getMessages } from "next-intl/server";
import { NextIntlClientProvider } from "next-intl";


const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {

  const locale = await getLocale();
  const messages =await getMessages()
  const response = await fetch ("https://api.jsonbin.io/v3/b/67faa7d48561e97a50fe2203",{
    method:"GET",
    headers:{
      'Content-Type':'application/json',
      'X-Master-Key':'$2a$10$u1.DamlS05GPjmeH79.fRu.7E0anrIkl9yNSemrXdkRzWrSi8y9ry'
    }
  })

  const data=await response.json()


  return (
    <html lang={locale}>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <NextIntlClientProvider messages={messages}>

       
       <Theme appearance={data.record.appearance} accentColor={data.record.accentColor} grayColor={data.record.grayColor} radius={data.record.radius} scaling={data.record.scaling}>
        <Provider>
           {children}
           
        </Provider>
       </Theme>
       </NextIntlClientProvider>
      </body>
    </html>
  );
}
