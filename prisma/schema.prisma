// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Users{
  id  String   @id @default(uuid()) @db.Uuid
  email String  @unique
  phone String  ?@unique
  point Int  @default(200)
  booking Booking[]

  wallet WalletTransaction[]
  saveProperty saveProperty[]

  fullName String ?
  fcm_token String ?
  avatar String?
  property Property[]
  role user_role @default(USER)
  createdAt DateTime @default(now())
  updateAt DateTime @updatedAt()

}   

model saveProperty{
   id String     @id @default(uuid()) @db.Uuid
   userId String @db.Uuid
   User Users @relation(fields: [userId],references: [id])
   propertyId String @unique @db.Uuid
   property Property @relation(fields: [propertyId], references: [id])



}

model Property {
  id                   String     @id @default(uuid())@db.Uuid

  userId String @db.Uuid
  users     Users @relation(fields: [userId], references: [id])
  booking Booking ?
  saveProperty saveProperty?

  propertyCategory     String
  gender               String?
  propertySeat         String? 
  propertyDivision     String
  propertyDistrict     String
  propertyUpzila       String
  propertySectorNo     String?    // Optional
  propertyRoadNo       String?    // Optional
  propertyHouseNo      String?    // Optional
  propertyShortAddress String
  propertyAvailable    String
  propertyType         PropertyType
  propertyBedroom      String
  propertyBathroom     String
  propertyBalcony      String?    // Optional
  propertyFloor        String?    // Optional
  propertySize         String?    // Optional
  propertyPrice        String
  propertyPriceType    PriceType
  propertyInclude      String[]   
  propertyImages       String[]
  propertyDescription  String?    
  propertyBookingStatus Boolean
  createdAt            DateTime   @default(now())
  updatedAt            DateTime   @updatedAt
}

enum PropertyType {
  house
  unit
  room
  flat
  floor
  apartment
  seat

}

enum PriceType {
  daily
  weekly
  monthly
}

enum user_role {
  ADMIN
  USER
}


model Booking {
  id         String    @id @default(uuid())@db.Uuid

  userId     String @db.Uuid
  user Users @relation(fields: [userId],references: [id])
  
  propertyId String @unique @db.Uuid

  pointsUsed Int

  property   Property  @relation(fields: [propertyId], references: [id])

  createdAt  DateTime  @default(now())
}


model WalletTransaction {
  id        String   @id @default(uuid())@db.Uuid
  userId    String @db.Uuid
  type      WalletTransactionType
  points    Int      // positive for credit, negative for debit
  reason    String?  // e.g. "Booking Property", "Recharge", "Admin Adjustment"
  meta      Json?    // optional metadata like bookingId, paymentId, etc.

  user      Users     @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
}

enum WalletTransactionType {
  RECHARGE   // from payment
  BOOKING    // deduct points for booking
  REFUND     // add back points
  ADJUSTMENT // admin manual adjustment
}
